package hamt

// Code generated by go-ipld-prime gengo.  DO NOT EDIT.

import (
	ipld "github.com/ipld/go-ipld-prime"
)

var _ ipld.Node = nil // suppress errors when this dependency is not referenced
// Type is a struct embeding a NodePrototype/Type for every Node implementation in this package.
// One of its major uses is to start the construction of a value.
// You can use it like this:
//
// 		hamt.Type.YourTypeName.NewBuilder().BeginMap() //...
//
// and:
//
// 		hamt.Type.OtherTypeName.NewBuilder().AssignString("x") // ...
//
var Type typeSlab

type typeSlab struct {
	Any                     _Any__Prototype
	Any__Repr               _Any__ReprPrototype
	Bool                    _Bool__Prototype
	Bool__Repr              _Bool__ReprPrototype
	Bucket                  _Bucket__Prototype
	Bucket__Repr            _Bucket__ReprPrototype
	BucketEntry             _BucketEntry__Prototype
	BucketEntry__Repr       _BucketEntry__ReprPrototype
	Bytes                   _Bytes__Prototype
	Bytes__Repr             _Bytes__ReprPrototype
	Element                 _Element__Prototype
	Element__Repr           _Element__ReprPrototype
	Float                   _Float__Prototype
	Float__Repr             _Float__ReprPrototype
	HashMapNode             _HashMapNode__Prototype
	HashMapNode__Repr       _HashMapNode__ReprPrototype
	HashMapRoot             _HashMapRoot__Prototype
	HashMapRoot__Repr       _HashMapRoot__ReprPrototype
	Int                     _Int__Prototype
	Int__Repr               _Int__ReprPrototype
	Link                    _Link__Prototype
	Link__Repr              _Link__ReprPrototype
	Link__HashMapNode       _Link__HashMapNode__Prototype
	Link__HashMapNode__Repr _Link__HashMapNode__ReprPrototype
	List                    _List__Prototype
	List__Repr              _List__ReprPrototype
	List__Element           _List__Element__Prototype
	List__Element__Repr     _List__Element__ReprPrototype
	Map                     _Map__Prototype
	Map__Repr               _Map__ReprPrototype
	String                  _String__Prototype
	String__Repr            _String__ReprPrototype
}

// --- type definitions follow ---

// Any matches the IPLD Schema type "Any".
// Any has Union typekind, which means its data model behaviors are that of a map kind.
type Any = *_Any
type _Any struct {
	x _Any__iface
}
type _Any__iface interface {
	_Any__member()
}

func (_Bool) _Any__member()   {}
func (_Int) _Any__member()    {}
func (_Float) _Any__member()  {}
func (_String) _Any__member() {}
func (_Bytes) _Any__member()  {}
func (_Map) _Any__member()    {}
func (_List) _Any__member()   {}
func (_Link) _Any__member()   {}

// Bool matches the IPLD Schema type "Bool".  It has bool kind.
type Bool = *_Bool
type _Bool struct{ x bool }

// Bucket matches the IPLD Schema type "Bucket".  It has list kind.
type Bucket = *_Bucket
type _Bucket struct {
	x []_BucketEntry
}

// BucketEntry matches the IPLD Schema type "BucketEntry".  It has Struct type-kind, and may be interrogated like map kind.
type BucketEntry = *_BucketEntry
type _BucketEntry struct {
	key   _Bytes
	value _Any
}

// Bytes matches the IPLD Schema type "Bytes".  It has bytes kind.
type Bytes = *_Bytes
type _Bytes struct{ x []byte }

// Element matches the IPLD Schema type "Element".
// Element has Union typekind, which means its data model behaviors are that of a map kind.
type Element = *_Element
type _Element struct {
	x _Element__iface
}
type _Element__iface interface {
	_Element__member()
}

func (_Link__HashMapNode) _Element__member() {}
func (_Bucket) _Element__member()            {}

// Float matches the IPLD Schema type "Float".  It has float kind.
type Float = *_Float
type _Float struct{ x float64 }

// HashMapNode matches the IPLD Schema type "HashMapNode".  It has Struct type-kind, and may be interrogated like map kind.
type HashMapNode = *_HashMapNode
type _HashMapNode struct {
	_map _Bytes
	data _List__Element
}

// HashMapRoot matches the IPLD Schema type "HashMapRoot".  It has Struct type-kind, and may be interrogated like map kind.
type HashMapRoot = *_HashMapRoot
type _HashMapRoot struct {
	hashAlg    _Int
	bucketSize _Int
	hamt       _HashMapNode
}

// Int matches the IPLD Schema type "Int".  It has int kind.
type Int = *_Int
type _Int struct{ x int64 }

// Link matches the IPLD Schema type "Link".  It has link kind.
type Link = *_Link
type _Link struct{ x ipld.Link }

// Link__HashMapNode matches the IPLD Schema type "Link__HashMapNode".  It has link kind.
type Link__HashMapNode = *_Link__HashMapNode
type _Link__HashMapNode struct{ x ipld.Link }

// List matches the IPLD Schema type "List".  It has list kind.
type List = *_List
type _List struct {
	x []_Any__Maybe
}

// List__Element matches the IPLD Schema type "List__Element".  It has list kind.
type List__Element = *_List__Element
type _List__Element struct {
	x []_Element
}

// Map matches the IPLD Schema type "Map".  It has map kind.
type Map = *_Map
type _Map struct {
	m map[_String]MaybeAny
	t []_Map__entry
}
type _Map__entry struct {
	k _String
	v _Any__Maybe
}

// String matches the IPLD Schema type "String".  It has string kind.
type String = *_String
type _String struct{ x string }
